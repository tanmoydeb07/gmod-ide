<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="package" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAMlSURBVDhPdZPdT5t1FMefG030D9iF3uimZhm+Lkbn
        CFllAnWDoTHh1sRkF4uaGWOyXehmoHvhbSMIatQFY+g22ZCX8eI2C2sppe14G1tbSgFbaMtLafsAFlrK
        no8HjIs6vDg3J7/v5/zOOd+jAMpWMdpWkDHaerDJ03zgN/cv+lf+791DYm/HoW0iNnhaD8bnXT8w038W
        19Wc5XsNb1XcvZT9xH9BDwBjnYWPiPjwaFu+LzRUzXoyjLYyzdJEE6vBVgK3PuVO/T7/8E9ZHw39mPnY
        36BNgLezMNfbfsjit51gNXZHUiugqaSjtxlrfIdVTzmpQANL7lp8rR8weOEN+8B3rxVsaDfEdd72Ai3q
        NZKIjBCd7GLSIQ97SnH/+gkT14+Q8FSRGDpJ0neBtekGFpwGXBff5Xbt7ouK9JvWkgFSkQGiI9VE+g2E
        uo/iaynCXpPJ2sIgJLwwfx3t91pwHYOgkfS4AUf1S2lFhqXeT07B8j3Wgs0sDp0mMXxS4jjBlvzNHHMd
        EPgezX2chEnHXHsWi64q7OdfUBV389vq/RUB/DEmEBdETKy6Skk4jjDXlk96rBLGK0hZ9Sx07GG2W8/s
        zULU4Qr6KjNUxdWYp65vAjywJN+N2wVyg7SvmkVzESmLHtWUyUJvHnOmHMLt2YRb8og5z2Ir26kqst+/
        ANICqgOiXdLvNZhpRPN+TrxPz7x1P7Nd+0W8j+krewlc0gmwhN4zz6nK3cvZKS09I5ubkOpmqd4Js1dk
        UPVoga+J2PRSWUe4LYupn/cwWbebcMeHxKwlWE89k1RGjLqb46ZjrIS6BeKDmEBCRpiuE0AN8+ZcqbyX
        qYbXCTUVEbWdIXjtM5xVB+gp2W5WxFmPirMOizl8/ltfsB7rk1n0yy8uo/lrmLnxpmwjh7izjIi5mOFv
        3qPHsMNvKd7+seXLpx5/YGVx1rb+b189JeaIh6zFMlSBxK0sjpSjDpbhqX8f6+lnl0VcaSl++sl/Wfmf
        B+L86uUMR9WLRvu557XIwHmmOo9iP6fb6PdqT8mOh65yy1PeANrKd+X2lu7skklbRbzp+63iT6ZtARTl
        F78TAAAAAElFTkSuQmCC
</value>
  </data>
</root>